{
  "template": {
    "taskId": "85be8eaa-e6a0-4018-b564-a057ec7855da",
    "name": "Element Selection Learning Objectives",
    "repo": "Modular-Curriculum",
    "path": "content/dom/objectives/reading-element-selection-objectives.md",
    "type": "Reading",
    "timeEstimate": 300,
    "urls": [
      "element-selection-learning-objectives"
    ],
    "topic": "Homework for Tuesday",
    "subtopic": "Learning Objectives",
    "body": "# Element Selection Lesson Learning Objectives\n\nBelow is a complete list of the terminal learning objectives for this lesson.\nWhen you complete this lesson, you should be able to perform each of the\nfollowing objectives. These objectives capture how you may be evaluated on the\nassessment for this lesson.\n\n1. Given HTML that includes `<div id=”catch-me-if-you-can”>HI!</div>`, write a\n   JavaScript statement that stores a reference to the HTMLDivElement with the\n   id “catch-me-if-you-can” in a variable named “divOfInterest”.\n2. Given HTML that includes seven SPAN elements each with the class “cloudy”,\n   write a JavaScript statement that stores a reference to a NodeList filled\n   with references to the seven HTMLSpanElements in a variable named\n   “cloudySpans”.\n3. Given an HTML file with HTML, HEAD, TITLE, and BODY elements, create and\n   reference a JS file that in which the JavaScript will create and attach to\n   the BODY element an H1 element with the id \"sleeping-giant\" with the content\n   \"Jell-O, Burled!\".\n4. Given an HTML file with HTML, HEAD, TITLE, SCRIPT, and BODY elements with the\n   SCRIPT's SRC attribute referencing an empty JS file, write a script in the JS\n   file to create a DIV element with the id \"lickable-frog\" and add it as the\n   last child to the BODY element.\n5. Given an HTML file with HTML, HEAD, TITLE, SCRIPT, and BODY elements with no\n   SRC attribute on the SCRIPT element, write a script in the SCRIPT block to\n   create a UL element with no id, create an LI element with the id\n   \"dreamy-eyes\", add the LI as a child to the UL element, and add the UL\n   element as the first child of the BODY element.\n6. Write JavaScript to add the CSS class \"i-got-loaded\" to the BODY element when\n   the window fires the DOMContentLoaded event.\n7. Given an HTML file with a UL element with the id \"your-best-friend\" that has\n   six non-empty LIs as its children, write JavaScript to write the content of\n   each LI to the console.\n8. Given an HTML file with a UL element with the id \"your-worst-enemy\" that has\n   no children, write JavaScript to construct a string that contains six LI tags\n   each containing a random number and set the inner HTML property of\n   ul#your-worst-enemy to that string.\n9. Write JavaScript to update the title of the document to the current time at a\n   reasonable interval such that it looks like a real clock.\n"
  },
  "success": true
}