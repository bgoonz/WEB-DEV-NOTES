{
  "template": {
    "taskId": "37751f46-de3b-43b6-8bf2-bb95688f3524",
    "name": "TTT: Saving Game State Hints",
    "repo": "Modular-Curriculum",
    "path": "content/dom/aggregates/tic-tac-toe/reading-step-06-hints-js.md",
    "type": "Reading",
    "timeEstimate": 0,
    "urls": [
      "ttt--saving-game-state-hints"
    ],
    "topic": "Thursday - JSON and Storage",
    "subtopic": "Tic-Tac-Toe Project",
    "body": "# Hints 6: Saving Game State\n\nA way to tackle this is to use local storage and JSON serialization to save the\nstate of the game with each change.\n\nYou can do that by creating a function that saves the game state to local\nstorage. You should call that function everywhere that the state of the game\nchanges.\n\nYou can then create a function that loads the state from the local storage (if\nit exists) and restores the state of the game and the UI. You can call that\nfunction after the DOM content loads.\n\nYou should probably create top-level constant variable(s) that hold the key(s)\nthat you will use for local storage so that you declare once and use often. Make\nsure that the keys that you use are \"unique\" in that, if another developer comes\nalong and wants to store something for the same domain, that they won't\naccidentally overwrite your game status. Maybe prefix your key name(s) with\n'tic-tac-toe-' or something similar.\n\nWhen you get done, it should look something like this. The \"flashing\" in the\nscreen recording is the page refreshing.\n\n![state saved between refreshes](https://assets.aaonline.io/Module-DOM-API/formative-project-tic-tac-toe/requirement-6.gif)\n"
  },
  "success": true
}