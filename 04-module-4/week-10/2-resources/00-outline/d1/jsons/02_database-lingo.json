{
  "template": {
    "taskId": "a83f33a9-9930-43e8-a42f-e54de051af27",
    "name": "Database Lingo",
    "repo": "Modular-Curriculum",
    "path": "content/relational-databases/topics/sql/readings/reading-00-what-is-postgresql-sql.md",
    "type": "Reading",
    "timeEstimate": 600,
    "urls": [
      "database-lingo"
    ],
    "topic": "Monday - Hello, Database!",
    "subtopic": "Lecture",
    "body": "# The Relational Database Management System\n\nDatabases are an essential part of many Web applications. There are lots of\nthings we could store in a database and use in a Web app, including user\ninformation, product information, review information, and more. Learning how to\ncreate databases and retrieve information stored in a database to display in a\nWeb app is a foundational development skill.\n\nThe most popular kind of database is called a _relational database_. That's what\nyou'll primarily use in this course. There are other databases called \"document\ndatabases\", \"non-relational databases\", or \"NoSQL databases\" that have become\npopular since the mid-2000s. They serve a different purpose that relational\ndatabases by storing data in ways that are different than the way relational\ndatabases store their data.\n\nIn this reading, you will learn about **relational database management\nsystems**. Then, you will install one. Then, you will start using it!\n\n## RDBMS\n\nThat's quite an ugly acronym, but it's what developers have when referring to\nthe software application that manages databases for us. Here's an important\ndifference for you to understand.\n\nThe **RDBMS** is a software application that you run that your programs can\nconnect to that they can store, modify, and retrieve data. The RDBS that you\nwill use in this course is called [PostgreSQL], often shortened to just\n\"postgres\", pronounced like it's spelled. It is an \"open-source\" RDBMS which\nmeans that you can go read the source code for it, copy it, modify it, and make\nyour own specialized version of an RDBMS. Often, developers will talk about the\n\"database server\". That is the computer on which the RDBMS is running.\n\nA **database** (or more properly **relational database**) is a collection of\nstructured data that the RDBMS manages for you. A single running RDBMS can have\nhundreds of databases in it that it manages.\n\nSoftware developers will often use the term \"database\" to refer to the RDBMS.\nThey will also say that \"the data is in postgres\" or \"the data is in Oracle\"\nwhich is terribly ambiguous because those are the names of the RDBMSes, not a\ndatabase where the data is stored. That'd be like asking someone their address\nand them replying \"Chicago\".\n\nJust be aware that the language around these terms is loose.\n\n## What is PostgreSQL?\n\nAgain, PostgreSQL is software. Specifically, it is an open-source, relational\ndatabase management system. It is derived from the POSTGRES package written at\nUC Berkeley. The specific name “PostgreSQL” was coined in 1996, after SQL was\nimplemented as its core query language. PostgreSQL provided a new program (new\nfor 1996) for interactive SQL queries called `[psql]`, which is terminal-based\nfront-end to PostgreSQL that lets you to type in queries interactively, issue\nthem to PostgreSQL, and see the query results.\n\nYou install PostgreSQL onto a computer. It then runs as a \"service\", that is, a\nprogram that runs in the background that should not stop until the machine does.\nYou will install it on your computer. It will quietly run in the background,\neagerly awaiting for you to connect to it and interact with it from the command\nline, from a GUI tool, or from your application.\n\nWhen you do connect with it, you will interact with it through a small set of\nits own commands and SQL.\n\n## What is SQL?\n\nSQL (pronounced \"sequel\" or \"s-q-l\") stands for \"Structured Query Language\". It\nis not a programming language like JavaScript. JavaScript, as you well know, has\n_control flow_, with `for` loops and `if` statements. Most SQL that you write\ndoesn't have all that. Instead, it is a _declarative_ programming language. You\ntell the database what computation you want it to do, and it does it. In that\nway, SQL is more like CSS than JavaScript.\n\nWhereas JavaScript works on variables and arrays of single values, most SQL\nworks on _sets_ of records. You'll see more what that means later, but just know\nthat in the SQL that you learn, you won't declare a single variable in that SQL.\n\nSQL, the language, is the primary way that you will interact with the RDBMS to\naffect the data in a single database or the structure of the database itself.\nThe process of using SQL takes two steps:\n\n1. Connect to an RDBMS specifying\n   * credentials, user name and password\n   * the name of the database that you want to use\n2. Issue one or more SQL statements to interact with\n   * the structure of the database\n   * the data in the database\n\nSome vendor-specific variants of SQL _do_ have loops and if-statements. However,\nyou will be learning the general kind of SQL, the one managed by the American\nNational Standards Institute, called ANSI SQL which defines the way that we get\ndata out of, put data into, modify data in, and remove data from a database.\nThis type of SQL is _portable_ between different types of database management\nsystems. That means most of what you learn in this course, you will be able to\nuse on _any_ relational database management system that supports ANSI SQL,\nRDBMSes such as\n\n* **Informix**, a commercial RDBMS from IBM intended to run on servers and\n  mainframes\n* **Microsoft Access**, a commercial RDBMS from Microsoft intended for personal\n  use\n* **Microsoft SQL Server**, a commercial RDBMS from Microsoft intended to run on\n  servers\n* **MySQL**, an open-source RDBMS comparable to PostgreSQL\n* **Oracle DB**, a commercial RDBMS from Microsoft intended to run on servers\n* **SQLite**, an open-source RDBMS that many applications _embed_ into the\n  program to efficiently store the application's data relational data\n\nNow that this preamble is out of the way, the next step is to install\nPostgreSQL!\n\n## What we learned:\n\nIn this article you learned that\n\n* A _relational database management_ system is software that usually runs as a\n  service that manages collections of structured data called databases.\n* PostgreSQL is one of many relational database management systems and the one\n  that you will mostly use in this course\n* A _database_ is a collection of structured data that an RDBMS manages for you.\n* The Structured Query Language (SQL) is a programming language that allows you\n  to interact with the structure of the database and the actual data that's\n  stored in it.\n\n[PostgreSQL]: https://www.postgresql.org/\n[psql]: https://www.postgresql.org/docs/9.2/app-psql.html\n"
  },
  "success": true
}